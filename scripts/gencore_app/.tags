!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
DepPackage	gencore_app/commands/cmd_build_docs.py	/^class DepPackage():$/;"	c
DocPackage	gencore_app/commands/cmd_build_man.py	/^class DocPackage(object):$/;"	c
Environment	gencore_app/utils/main_env.py	/^class Environment(Environment):$/;"	c
GlobalOpts	gencore_app/cli.py	/^class GlobalOpts(object):$/;"	c
IntegrationTest	tests/cli.py	/^class IntegrationTest(unittest.TestCase):$/;"	c
MeMyDocs	gencore_app/commands/cmd_build_docs.py	/^class MeMyDocs():$/;"	c
MyCLI	gencore_app/cli.py	/^class MyCLI(click.MultiCommand):$/;"	c
TrackSoftware	gencore_app/commands/cmd_build_docs.py	/^class TrackSoftware():$/;"	c
Uploader	gencore_app/utils/main_upload.py	/^class Uploader(Uploader):$/;"	c
__init__	gencore_app/cli.py	/^    def __init__(self):$/;"	m	class:GlobalOpts
__init__	gencore_app/commands/cmd_build_docs.py	/^    def __init__(self):$/;"	m	class:MeMyDocs
__init__	gencore_app/commands/cmd_build_docs.py	/^    def __init__(self):$/;"	m	class:TrackSoftware
__init__	gencore_app/commands/cmd_build_docs.py	/^    def __init__(self, name=None, version=None, summary=None, channel=None):$/;"	m	class:DepPackage
__init__	gencore_app/commands/cmd_build_man.py	/^	def __init__(self, name, version, marked, env_file):$/;"	m	class:DocPackage
__init__	gencore_app/utils/main_env.py	/^    def __init__(self, name=None, filename=None, channels=None,$/;"	m	class:Environment
__init__	gencore_app/utils/main_upload.py	/^    def __init__(self, packagename, env_file, **kwargs):$/;"	m	class:Uploader
add_envs	gencore_app/commands/cmd_build_docs.py	/^    def add_envs(self):$/;"	m	class:MeMyDocs
add_envs	gencore_app/commands/cmd_build_docs.py	/^    def add_envs(self, env):$/;"	m	class:DepPackage
aserver_api	gencore_app/commands/cmd_build_man.py	/^aserver_api = get_server_api()$/;"	v
aserver_api	gencore_app/utils/main.py	/^aserver_api = get_server_api()$/;"	v
assertStatusNotOk	tests/cli.py	/^    def assertStatusNotOk(self, status):$/;"	m	class:IntegrationTest
assertStatusOk	tests/cli.py	/^    def assertStatusOk(self, status):$/;"	m	class:IntegrationTest
cli	gencore_app/cli.py	/^def cli():$/;"	f
cli	gencore_app/commands/cmd_build_docs.py	/^def cli(verbose, environments):$/;"	f
cli	gencore_app/commands/cmd_build_eb.py	/^def cli(verbose, environments):$/;"	f
cli	gencore_app/commands/cmd_build_envs.py	/^def cli(verbose, environments):$/;"	f
cli	gencore_app/commands/cmd_build_man.py	/^def cli(verbose, environments):$/;"	f
cli	gencore_app/commands/cmd_upload_envs.py	/^def cli(verbose, environments):$/;"	f
create_env	tests/cli.py	/^def create_env(content, filename='environment.yml'):$/;"	f
docs_prep	gencore_app/commands/cmd_build_man.py	/^def docs_prep(fname):$/;"	f
find_files	gencore_app/utils/main.py	/^def find_files(environments):$/;"	f
flatten_deps	gencore_app/commands/cmd_build_docs.py	/^def flatten_deps(deps):$/;"	f
from_file	gencore_app/utils/main_env.py	/^def from_file(filename):$/;"	f
from_yaml	gencore_app/utils/main_env.py	/^def from_yaml(yamlstr, **kwargs):$/;"	f
gen_labels	gencore_app/utils/main_upload.py	/^def gen_labels(env):$/;"	f
get_command	gencore_app/cli.py	/^    def get_command(self, ctx, name):$/;"	m	class:MyCLI
get_name	gencore_app/utils/main.py	/^def get_name(fname):$/;"	f
global_opts	gencore_app/cli.py	/^global_opts = GlobalOpts()$/;"	v
global_test_options	gencore_app/cli.py	/^    def global_test_options(self, func):$/;"	m	class:GlobalOpts
global_test_options	gencore_app/cli.py	/^global_test_options = global_opts.global_test_options$/;"	v
include_package_data	setup.py	/^    include_package_data=True,$/;"	v
install_requires	setup.py	/^    install_requires=[$/;"	v
list_commands	gencore_app/cli.py	/^    def list_commands(self, ctx):$/;"	m	class:MyCLI
logger	gencore_app/commands/cmd_build_docs.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	gencore_app/commands/cmd_build_eb.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	gencore_app/commands/cmd_build_envs.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	gencore_app/commands/cmd_build_man.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	gencore_app/commands/cmd_upload_envs.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	gencore_app/utils/main.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	gencore_app/utils/main_build_env.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	gencore_app/utils/main_env.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	gencore_app/utils/main_upload.py	/^logger = logging.getLogger(__name__)$/;"	v
make_doc_package	gencore_app/commands/cmd_build_man.py	/^def make_doc_package(docs):$/;"	f
make_man	gencore_app/commands/cmd_build_man.py	/^def make_man(docs):$/;"	f
name	setup.py	/^    name='gencore_app',$/;"	v
packages	setup.py	/^    packages=['gencore_app', 'gencore_app.commands', 'gencore_app.utils'],$/;"	v
parse_deps	gencore_app/commands/cmd_build_docs.py	/^def parse_deps(dep):$/;"	f
plugin_folder	gencore_app/cli.py	/^    def plugin_folder(self):$/;"	m	class:MyCLI
print_html_doc	gencore_app/commands/cmd_build_eb.py	/^def print_html_doc(name, version):$/;"	f
rebuild	gencore_app/utils/main.py	/^def rebuild(filename):$/;"	f
remote_docs_exist	gencore_app/commands/cmd_build_man.py	/^def remote_docs_exist(docs):$/;"	f
remote_env_exists	gencore_app/utils/main.py	/^def remote_env_exists(env):$/;"	f
remove_env_file	tests/cli.py	/^def remove_env_file(filename='environment.yml'):$/;"	f
run	tests/cli.py	/^def run(command):$/;"	f
run_command	gencore_app/utils/main.py	/^def run_command(cmd, verbose=True):$/;"	f
run_conda_env_create	gencore_app/utils/main_build_env.py	/^def run_conda_env_create(fname):$/;"	f
save_extra_args	gencore_app/utils/main_env.py	/^    def save_extra_args(self):$/;"	m	class:Environment
search_deps	gencore_app/commands/cmd_build_docs.py	/^    def search_deps(self, dep, version, channels):$/;"	m	class:MeMyDocs
status_check_build	gencore_app/utils/main_build_env.py	/^def status_check_build(build_passes):$/;"	f
status_check_man	gencore_app/commands/cmd_build_man.py	/^def status_check_man(man_passes):$/;"	f
status_check_upload	gencore_app/utils/main_upload.py	/^def status_check_upload(upload_env_passes):$/;"	f
test_rebuild	tests/cli.py	/^    def test_rebuild(self):$/;"	m	class:IntegrationTest
to_dict	gencore_app/utils/main_env.py	/^    def to_dict(self):$/;"	m	class:Environment
to_dict_extra_args	gencore_app/utils/main_env.py	/^    def to_dict_extra_args(self):$/;"	m	class:Environment
to_yaml_extra_args	gencore_app/utils/main_env.py	/^    def to_yaml_extra_args(self, stream=None):$/;"	m	class:Environment
try_conda_env_create	gencore_app/utils/main_build_env.py	/^def try_conda_env_create(fname):$/;"	f
update_env	gencore_app/commands/cmd_build_man.py	/^def update_env(docs):$/;"	f
upload	gencore_app/utils/main_upload.py	/^    def upload(self, labels):$/;"	m	class:Uploader
upload_remote_env	gencore_app/utils/main_upload.py	/^def upload_remote_env(fname, verbose=False):$/;"	f
version	gencore_app/utils/main_upload.py	/^    def version(self):$/;"	m	class:Uploader
version	setup.py	/^    version='1.0',$/;"	v
write_docs	gencore_app/commands/cmd_build_docs.py	/^    def write_docs(self, environments):$/;"	m	class:MeMyDocs
write_env_markdown	gencore_app/commands/cmd_build_docs.py	/^    def write_env_markdown(self, fname):$/;"	m	class:MeMyDocs
write_software_markdown	gencore_app/commands/cmd_build_docs.py	/^    def write_software_markdown(self):$/;"	m	class:MeMyDocs
write_summary_markdown	gencore_app/commands/cmd_build_docs.py	/^    def write_summary_markdown(self):$/;"	m	class:MeMyDocs
write_table_markdown	gencore_app/commands/cmd_build_docs.py	/^    def write_table_markdown(self):$/;"	m	class:MeMyDocs
